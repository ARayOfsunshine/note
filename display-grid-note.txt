网格布局：display:grid;
1：基本概念：采用网格布局的区域，display:grid;称为"容器"（container）。容器内部采用网格定位的子元素，disply:grid下的顶层子元素,称为"项目"（item）。注意：项目只能是容器的顶层子元素，不包含项目的子元素，Grid 布局只对项目生效。

2：设为网格布局以后，容器子元素（项目）的float、display: inline-block、display: table-cell、vertical-align和column-*等设置都将失效。

3:容器属性：
1),display: grid指定一个容器采用网格布局。

2),grid-template-columns属性定义每一列的列宽。

3),grid-template-rows属性定义每一行的行高。

4),repeat()函数：接受两个参数，第一个参数是重复的次数，第二个参数是所要重复的值。grid-template-columns:repeat();grid-template-rows:repeat();

5),有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用auto-fill关键字表示自动填充。grid-template-columns:repeat(auto-fill,100px);

6),fr 关键字：为了方便表示比例关系，网格布局提供了fr关键字（fraction 的缩写，意为"片段"）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。

7),minmax()函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为不小于最小值和不大于最大值。

8),auto 关键字auto关键字表示由浏览器自己决定长度。grid-template-columns: 100px auto 100px;三栏布局，左右固定，中间自适应。

9),网格线的名称：grid-template-columns属性和grid-template-rows属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。  grid-template-columns: [c1] 100px [c2] 100px [c3] auto [c4];
grid-template-rows: [r1] 100px [r2] 100px [r3] auto [r4];

10),grid-row-gap属性设置行与行的间隔（行间距），grid-column-gap 属性设置列与列的间隔（列间距）。grid-gap属性是grid-column-gap和grid-row-gap的合并简写形式，grid-gap: <grid-row-gap> <grid-column-gap>;

11), grid-template-areas 属性：网格布局允许指定"区域"（area），一个区域由单个或多个单元格组成。grid-template-areas属性用于定义区域。区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为区域名-start，终止网格线自动命名为区域名-end。

12), grid-auto-flow 属性设置容器的子元素顺序，自动放置在每一个网格。默认值是row，即"先行后列"。也可以将它设成column，变成"先列后行"。row dense和column dense。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。

13)，justify-items属性设置单元格内容的水平位置（左中右），align-items属性设置单元格内容的垂直位置（上中下）。justify-items: start | end | center | stretch; align-items: start | end | center | stretch;
start：对齐单元格的起始边缘。end：对齐单元格的结束边缘。center：单元格内部居中。stretch：拉伸，占满单元格的整个宽度（默认值）。
place-items属性是align-items属性和justify-items属性的合并简写形式。

14)，justify-content属性是整个内容区域在容器里面的水平位置（左中右），align-content属性是整个内容区域的垂直位置（上中下）。
justify-content: start | end | center | stretch | space-around | space-between | space-evenly;
align-content: start | end | center | stretch | space-around | space-between | space-evenly;  
place-content属性是align-content属性和justify-content属性的合并简写形式。

15)，grid-auto-columns属性和grid-auto-rows属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与grid-template-columns和grid-template-rows完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。

4：项目属性：
1),grid-column-start属性：左边框所在的垂直网格线。grid-column-end属性：右边框所在的垂直网格线。grid-row-start属性：上边框所在的水平网格线。grid-row-end属性：下边框所在的水平网格线。
这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。  grid-column-start: header-start;grid-column-end: header-end;
这四个属性的值还可以使用span关键字，表示"跨越"，即左右边框（上下边框）之间跨越多少个网格。
使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。
2),grid-column属性是grid-column-start和grid-column-end的合并简写形式，grid-row属性是grid-row-start属性和grid-row-end的合并简写形式。 grid-column: 1 / 3;grid-row: 1 / 2;
3),grid-area属性指定项目放在哪一个区域。 grid-area: e;    grid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。
4),justify-self属性设置单元格内容的水平位置（左中右），跟justify-items属性的用法完全一致，但只作用于单个项目。align-self属性设置单元格内容的垂直位置（上中下），跟align-items属性的用法完全一致，也是只作用于单个项目。place-self属性是align-self属性和justify-self属性的合并简写形式。




