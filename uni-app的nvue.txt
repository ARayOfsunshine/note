nvue是vue的补充， 在App 平台实现一些 vue 上无法实现或性能有问题的场景。 使用nuve的场景，长列表滑动对app端的性能体验不好等，nvue使用原生渲染。
提供两个编译模式，weex和uni-app；默认weex,这是为了向下兼容；切换在manifest.json下配置；{"app-plus": {       "nvueCompiler":"uni-app" //是否启用 uni-app 模式    }      }
manifest.json当中app-plus配置项中，还提供了renderer:native字段表示app端使用原生渲染，vue组件中的代码也需要覆盖nvue规范。

weex模式下：使用weex组件开发，遵循weex规范，缺点；不能跨端开发，比如不能编译成小程序运行；仅在app端运行；

uni-app模式下：能够运行使用uni-app组件以及生命周期函数，并且编译运行在app端以小程序端和H5端。


在nvue下的css注意点：1，只有text标签可以设置字体大小，字体颜色
                     2，布局不能使用百分比
                     3，只能使用 class 选择器
                     4，border 不支持简写
                     5，background 不支持简写
                     6，.nvue 页面的布局排列方向默认为竖排（column），如需改变布局方向，可以在 manifest.json -> app-plus -> nvue -> flex-direction 节点下修改，仅在 uni-app 模式下生效。
                     7，nvue的uni-app编译模式下，App.vue 中的样式，会编译到每个 nvue文件。非uni-app编译模式不会。对于共享样式，如果有不合法属性控制台会给出警告，可以通过条件编译屏蔽 App 中的警告。

nvue编译为H5、小程序时注意
nvue页面编译为H5、小程序时，会做一件css默认值对齐的工作。
因为weex布局只支持flex，并且默认flex方向是垂直。而H5和小程序端，使用web渲染，web默认不是flex，并且设置display:flex后，它的flex方向默认是水平的。
所以nvue编译为H5、小程序时，会自动把页面默认布局设为flex、方向为垂直。当然开发者手动设置后会覆盖默认设置。



总结：（1）：在写视图模板的写法要看配置文件写的编译模式，编译模式有weex以及uni-app。
             weex 模式：老模式，使用 weex组件，写法同weex标准写法。只能在 App 端中运行，部分 uni-app Api 不能使用。如果没有配置，默认是weex模式。
             uni-app 模式：新模式，改用 uni-app 基础组件，写法同uni-app。目前已支持大部分组件；支持app.vue里的全局样式；支持nvue页面编译H5和小程序端；可以使用绝大部分 uni-app Api 。uni-app模式               也可以使用weex里的组件，比如list、refresh、recircle-list。目前这些组件只有weex端才有，后续官网会把这些uni-app缺少的组件移植到其他端，比如小程序和H5。

      （2）：在nvue当中的css使用的是weex原生渲染的写法，有很多限制。display不局只能使用flex，以及其他等。

注意事项：现阶段 nvue 的定位是 vue 的补充。在 App 平台实现一些 vue 上无法实现或性能有问题的场景。
          nvue 的各组件在安卓端默认是透明的，如果不设置background-color，可能会导致出现重影的问题。
          在 App.vue 中定义的全局js变量不会在 nvue 页面生效。globalData和vuex是生效的。
          nvue 切换横竖屏时可能导致样式出现问题，建议有 nvue 的页面锁定手机方向。
          不能在 style 中引入字体文件，nvue 中字体图标的使用参考：weex 加载自定义字体。如果是本地字体，可以用plus.io的API转换路径。
          目前不支持在 nvue 页面使用 typescript/ts。
          nvue 页面 titleNview 设为 false时，想要模拟状态栏，可以参考：https://ask.dcloud.net.cn/article/35111。

weex下的css规则：
(1):Weex 对于长度值目前只支持px和wx（不受屏幕宽度和viewPortWidth影响），不支持相对单位（em、rem）
(2):Weex 盒模型的 box-sizing 默认为 border-box，即盒子的宽高包含内容、内边距和边框的宽度，不包含外边距的宽度。在 Android 平台，Weex 只支持 overflow:hidden。在 iOS 上，Weex 支持 overflow:hidden 和 overflow:visible，默认是 overflow:visible。
(3):display只支持flex。默认flex-direction：column。