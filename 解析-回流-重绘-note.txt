1：浏览器运行时的解析操作：网页DOM元素会被排列为DOM树型的结构进行解析；形成DOMTree;同时也对相对应的CSS也进行解析，形成CSSTree；等DOMtree与CSSTree解析完成后会形成渲染树RenderTree，加载页面；
2：回流与重绘：
（1）回流：因为DOM节点的尺寸，布局，display属性变化等，这些一改变就会让渲染树的一部分或全部需要重新构建，引发回流。回流的产生一定会引起重绘。重绘不一定会引起回流。
（2）重绘：回流完成时，渲染树要重新绘制受影响的部分渲染树，就叫做重绘。（顾名思义重新绘制），（添加DOM元素背景颜色，改变字体颜色等，都会引起重绘）

引起回流的因素：
1，DOM节点的增加，删除。
2，DOM节点位置变化。
3，元素的尺寸，边距，填充，边框，宽高。
4，DOM节点display显示与否。
5，页面渲染初始化。
6，浏览器窗口发生改变:resize事件。
7，向浏览器请求某些样式信息-->offset，scroll，client，width，height，getComputedStyle()，currentStyle()等；

JS操作DOM元素耗费性能的因素主要就是减少页面的回流次数。
在元素节点appendChild添加元素会有一次回流与重绘，但是如果是insertbefore添加在元素节点前面，后面的节点都会引起回流与重绘。