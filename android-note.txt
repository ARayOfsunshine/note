控件属性
id：控件的标识，可与代码相关。

在代码中使用控件
1，声明控件
2，findViewById();返回值为view。所有控件的父类都是view。

Button：控件的事件
（1）：以内部内的方式给Button控件添加事件：
关联button控件pravite Button btn;btn=(Button)findViewById(R.id.控件上的id属性值)；
给button控件添加事件btn.setOnClickListener(实现View.onClickListener的类对象);
（2）：以匿名类的方法直接实现类的方法。
关联button控件pravite Button btn;btn=(Button)findViewById(R.id.控件上的id属性值)；
给button控件添加事件btn.setOnClickListener(View.OnClickListener(){ public void onClick(View v){事件处理程序}});
（3）：以xml的方式设置事件
给Button控件直接添加android:onClick="事件名"。
在代码中以public void 事件名(参数需要跟事件事件的原型类相同 View v){}

EditText:输入框
（1）：比较重要的几个属性：text文本内容，inputType文本类型，hint给输入框提示。

imageView:图像控件（文件名指的都是没有后缀的）
（1）：比较重要的几个属性：src=“@dramable/文件名”,setImageResouce(R.dramable.文件名);

imageButton：图像按键
（1）：imageButton是imageView的子类，点击图片是可以响应事件的。

radioGroup与radioButton：单选框组与单选框
（1）：radioGroup控件下radioButton发生改变可以使用setOnCheckedChangeListener来监听事件。实现的接口类对象为RadioGroup.OnCheckedChangeListener，
方法为onCheckedChanged(RadioGroup group,Int checkedId);  参数checkedId是选中RadioButton的ID，可以使用R.id.组件id来判断选中单选项，或通过获取到的RadioButton的关联对象来使用isChecked()来判断控件的选中状态来判断选中哪一个。
（2）：radioButton当中选中设置属性为setChecked(true);

CheckBox：复选框按钮	
isChecked():确定复选框是否被选中；
setChecked():强制选中或取消选中。
监听器：实现CompoundButton.OnCheckedChangeListener接口。并实现回调方法onCheckedChange()方法。


资源的使用：资源的使用是为了国际化或本地化的使用。资源的文件一定要是小写。
在res文件夹下有个values文件，存放的是资源xml文件预设好的参数值，能够根据系统设置自动改变预设好的代码预设。values默认为安卓系统语言为英语的资源使用，而values-zh为中文的。
资源使用可以在布局文件当中使用：@资源名称/资源的name
在代码中使用：Resouces res=new 	Resouces();String str=res.getString(R.string.test);

触屏事件：
（1）：对屏幕的触屏事件重写Activity类的onTouchEvent(MotionEvent event)方法。通过参数event.getAction()方法能区分用户的操作，用于与MotionEvent类的属性比较。event.getAction().getX()用于获取在当前屏幕的x的位置，event.getAction().getY()用于获取在当前屏幕Y的位置。
（2）：MotionEvent.ACTION_DOWN手势按下，MotionEvent.ACTION_MOVE手势移动，MotionEvent.ACTION_UP手势抬起。
（3）：在控件上注册监听事件，使用的是监听事件setOnTouchListener()。实现的类为View.OnTouchListener。重写方法为public booleab onTouch(View view,MotionEvent event){};	


layout：布局
（1）：LinearLayout线性布局：比较重要的属性orientation排列方向(分别为水平与垂直)，gravity重心（控件的对齐方式）android:layout_weight权重设置在线性布局的控件上指的是占布局的比重。对于布局下有很多控件下可以通过布局对象获取子控件的个数getChildCount()方法。 案例：动态更改排列方向。通过checkbox来选择重心排列位置。
（2）：RelativeLayout相对布局：1，相对布局可以以父容器相对对齐的方式属性在控件上alignParentLeft,alignParentTop等，或者以控件间的相对对齐做参考的在对比控件上有layout_above在上方，layout_alginleft在左对齐，layout_below在下方，layout_alginbotton等。（对其的比较为id值）；
（3）：tableLayout：表单布局，控制直接放在tablelayout会占满一行，要用tablerow才能使用单元格。能给子控件添加layout_span来表示占几个单元格。在子控件上使用layout_column来表示控件在展示在第几个单元格（注意：单元格索引开始值为0）。使用tablelayout属性stretchColumns来指定整个表单的表格扩张沾满。使用tableLayout属性shrinkColumns来指定整个表单的表格收缩。使用tableLayout属性collapsceCloumn来折叠指定的列。
（4）：安卓4.0添加的GridLayout网格布局。常用属性有orientation指定网格控件的排列方式，layout_gravity来指定网格控件的对其方式。属性rowCount来指定网格占有几行，属性colmunCount来指定网格占有几列。
（5）：FrameLayout帧布局。显示的对象将会固定在屏幕的左上角，不能指定位置。当有多个显示对象，后一个将会直接在前一个之上进行覆盖显示，把前一个控件部分或全部挡住。
（6）：drawerLayout抽屉布局。侧边拖动出现菜单项。
（7）：scrollView设置垂直滚动条。滚动条控件下，只允许设置一个子容器。同理水平控制条为horizontalScrollView。


消息处理机制：
主线程处理事件超过5秒，app会提示程序无响应，所以主线线程处理的事件不能超过5秒。

XML解析：
（1）：在安卓项目当中使用xml文件放在xml文件夹中。对于xml的解析工作是使用xmlPullParser来执行的（安卓项目是使用pull解析，pull解析本质就是SAX解析）。获取xml文件然后通过xmlPullParser来处理。代码案例：xmlPullParser parser =getResouces().getXml(R.xml.xml文件名)。同过parser对象来获知xml解析的情况。parser.getEventType();通过与xmlPullParser.START_DOCUMENTD等来判断解析到的情况。一般解析文件操作比较耗时，应该开启一个线程来执行。

json解析：
java中的json对象JsonObject json=new JsonObject();json.getString("键名");

消息提示：
Toast给用户一个短暂的提示，用户不需要进行响应。使用：使用Toast类上的静态方法，Toast.makeText(context,text,duration)；context上下文，text:提示的信息，duration提示的时长。
如果需要定义自己自定义提示内容可以使用构造的方法创建Toast。使用:Toast t=new Toast(context);t.setView(控件);t.setDuration(设置时长)注意设置完后必须调用t.show()方法。
获取自定义的view使用方法：View v=LayoutInflater.from(this).inflate(R.layou.viewId,null);
AlterDiaog对话消息提示：用户必须点击确定对话框才会消失。使用：AlterDialog ad=new AlterDialog.Builder(context).setTtile().setMessage().setPositiveButton(按钮文字,事件监听).create();ad.show();对话框按钮事件使用new DialogInterface.onClickListener(){ 实现public void onClick(){}}。

列表对话框：单项的列表对话框：使用对话框类AlterDialog创建：使用:new AlterDialog.Builder(context).setItem(数组，用来创建的列表项).show();
            具有单选按钮的列表对话框：使用的是setSingleChoiceItems(数组，默认选中项，事件监听)。注意：点击对话框想要保存之前的选项，应该将创建的类使用AlterDialog 变量保存。
            具有多项选择按钮的列表对话框:使用的方法是setMulitChoiceItems(数组，布尔值，事件监听);

进度条对话框：展示工作的进行到的情况反馈。默认的展示是加载圈。水平的展示进度条使用：ProgressDialog dlg =new progressDialog(context);dlg.setTitle(),set...等。dlg.setProgressStyle(设置进度条的样式。ProgressDialog.常量)；dlg.show();设置进度条的数值dlg.setProgress(整数);关闭进度条对话框dlg.dismiss();

自定义对话框：方法1：使用AlterDialog.Builder().setView()设置视图的方法。方法2：使用Dialog类的实例，使用方法setContentView(View view)设置自定义视图。
              方法1：解析自定义资源当中的布局文件。layoutInterface i=getLayoutInflater();View custom =i.inflater(R.layout.视图文件名)。
              方法2：Dialog dl=new Dialog(context);dl.setContentView(视图)；关闭对话框 dl.dismiss();

适配器：负责为部件提供数据源，让数据能够显示在控件上，就是适配器的工作。adapater ListView控件显示adapter。ArrayAdapter。
SimpleAdapter adapter=new SimpleAdapter(context,data,项布局，显示数据源的key,显示数据的id);
BaseAdapter类是一个接口，需要实现内置好的方法，对应的设置好适配的数据源。最后通过ListView.setAdapter(对BaseAdapter接口实现类的实例对象)